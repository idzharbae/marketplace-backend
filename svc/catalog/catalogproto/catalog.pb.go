// Code generated by protoc-gen-go. DO NOT EDIT.
// source: catalog.proto

package catalogproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListProductsReq struct {
	ShopIDs              []int64     `protobuf:"varint,1,rep,packed,name=shopIDs,proto3" json:"shopIDs,omitempty"`
	Pagination           *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Search               string      `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	Category             string      `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	OrderBy              string      `protobuf:"bytes,6,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	OrderType            string      `protobuf:"bytes,7,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	ProductIds           []int64     `protobuf:"varint,8,rep,packed,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListProductsReq) Reset()         { *m = ListProductsReq{} }
func (m *ListProductsReq) String() string { return proto.CompactTextString(m) }
func (*ListProductsReq) ProtoMessage()    {}
func (*ListProductsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abbfcf058acdf89, []int{0}
}

func (m *ListProductsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProductsReq.Unmarshal(m, b)
}
func (m *ListProductsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProductsReq.Marshal(b, m, deterministic)
}
func (m *ListProductsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProductsReq.Merge(m, src)
}
func (m *ListProductsReq) XXX_Size() int {
	return xxx_messageInfo_ListProductsReq.Size(m)
}
func (m *ListProductsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProductsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListProductsReq proto.InternalMessageInfo

func (m *ListProductsReq) GetShopIDs() []int64 {
	if m != nil {
		return m.ShopIDs
	}
	return nil
}

func (m *ListProductsReq) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *ListProductsReq) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *ListProductsReq) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *ListProductsReq) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *ListProductsReq) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *ListProductsReq) GetProductIds() []int64 {
	if m != nil {
		return m.ProductIds
	}
	return nil
}

type ListProductsResp struct {
	Products             []*Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListProductsResp) Reset()         { *m = ListProductsResp{} }
func (m *ListProductsResp) String() string { return proto.CompactTextString(m) }
func (*ListProductsResp) ProtoMessage()    {}
func (*ListProductsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abbfcf058acdf89, []int{1}
}

func (m *ListProductsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProductsResp.Unmarshal(m, b)
}
func (m *ListProductsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProductsResp.Marshal(b, m, deterministic)
}
func (m *ListProductsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProductsResp.Merge(m, src)
}
func (m *ListProductsResp) XXX_Size() int {
	return xxx_messageInfo_ListProductsResp.Size(m)
}
func (m *ListProductsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProductsResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListProductsResp proto.InternalMessageInfo

func (m *ListProductsResp) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type GetProductReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug                 string   `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProductReq) Reset()         { *m = GetProductReq{} }
func (m *GetProductReq) String() string { return proto.CompactTextString(m) }
func (*GetProductReq) ProtoMessage()    {}
func (*GetProductReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abbfcf058acdf89, []int{2}
}

func (m *GetProductReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProductReq.Unmarshal(m, b)
}
func (m *GetProductReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProductReq.Marshal(b, m, deterministic)
}
func (m *GetProductReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProductReq.Merge(m, src)
}
func (m *GetProductReq) XXX_Size() int {
	return xxx_messageInfo_GetProductReq.Size(m)
}
func (m *GetProductReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProductReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetProductReq proto.InternalMessageInfo

func (m *GetProductReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetProductReq) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

type PKReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PKReq) Reset()         { *m = PKReq{} }
func (m *PKReq) String() string { return proto.CompactTextString(m) }
func (*PKReq) ProtoMessage()    {}
func (*PKReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abbfcf058acdf89, []int{3}
}

func (m *PKReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PKReq.Unmarshal(m, b)
}
func (m *PKReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PKReq.Marshal(b, m, deterministic)
}
func (m *PKReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PKReq.Merge(m, src)
}
func (m *PKReq) XXX_Size() int {
	return xxx_messageInfo_PKReq.Size(m)
}
func (m *PKReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PKReq.DiscardUnknown(m)
}

var xxx_messageInfo_PKReq proto.InternalMessageInfo

func (m *PKReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*ListProductsReq)(nil), "catalogproto.ListProductsReq")
	proto.RegisterType((*ListProductsResp)(nil), "catalogproto.ListProductsResp")
	proto.RegisterType((*GetProductReq)(nil), "catalogproto.GetProductReq")
	proto.RegisterType((*PKReq)(nil), "catalogproto.PKReq")
}

func init() {
	proto.RegisterFile("catalog.proto", fileDescriptor_0abbfcf058acdf89)
}

var fileDescriptor_0abbfcf058acdf89 = []byte{
	// 384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0x4b, 0x8f, 0xd3, 0x30,
	0x14, 0x85, 0x9b, 0xf4, 0x95, 0xde, 0x36, 0x80, 0x2e, 0x02, 0x4c, 0x50, 0x21, 0xca, 0x2a, 0xab,
	0x4a, 0xb4, 0x1b, 0x76, 0x48, 0x7d, 0x08, 0x55, 0x80, 0xa8, 0x22, 0x58, 0x57, 0x6e, 0x62, 0xa5,
	0x11, 0x99, 0xda, 0x63, 0xbb, 0x8b, 0xfc, 0xeb, 0x59, 0xcc, 0x0f, 0x18, 0x8d, 0x93, 0x3e, 0x52,
	0x55, 0xdd, 0xcc, 0xce, 0xc7, 0xdf, 0xd1, 0xf1, 0x3d, 0xd7, 0xe0, 0xc6, 0x54, 0xd3, 0x9c, 0xa7,
	0x23, 0x21, 0xb9, 0xe6, 0x38, 0xa8, 0xa4, 0x51, 0x9e, 0x2b, 0x24, 0x4f, 0xf6, 0xb1, 0x2e, 0xa1,
	0x07, 0x1b, 0xaa, 0x58, 0x79, 0x0e, 0x1e, 0x2d, 0x78, 0xfd, 0x2b, 0x53, 0x7a, 0x55, 0x3a, 0x54,
	0xc4, 0xee, 0x91, 0x40, 0x57, 0x6d, 0xb9, 0x58, 0xce, 0x15, 0xb1, 0xfc, 0x66, 0xd8, 0x8c, 0x0e,
	0x12, 0xbf, 0x01, 0x08, 0x9a, 0x66, 0x3b, 0xaa, 0x33, 0xbe, 0x23, 0xb6, 0x6f, 0x85, 0xfd, 0x31,
	0x19, 0x9d, 0xbf, 0x35, 0x5a, 0x1d, 0x79, 0x74, 0xe6, 0xc5, 0xf7, 0xd0, 0x51, 0x8c, 0xca, 0x78,
	0x4b, 0x9a, 0xbe, 0x15, 0xf6, 0xa2, 0x4a, 0xa1, 0x07, 0x4e, 0x4c, 0x35, 0x4b, 0xb9, 0x2c, 0x48,
	0xcb, 0x90, 0xa3, 0xc6, 0x8f, 0xe0, 0x70, 0x99, 0x30, 0xb9, 0xde, 0x14, 0xa4, 0x63, 0x58, 0xd7,
	0xe8, 0x69, 0x81, 0x43, 0x80, 0x12, 0xe9, 0x42, 0x30, 0xd2, 0x35, 0xb0, 0x67, 0x6e, 0xfe, 0x16,
	0x82, 0xe1, 0x17, 0xe8, 0x57, 0x95, 0xd7, 0x59, 0xa2, 0x88, 0x63, 0x5a, 0x40, 0x75, 0xb5, 0x4c,
	0x54, 0xb0, 0x80, 0x37, 0xf5, 0xd6, 0x4a, 0xe0, 0x57, 0x70, 0x2a, 0x47, 0xd9, 0xbb, 0x3f, 0x7e,
	0x77, 0x51, 0xad, 0xa4, 0xd1, 0xd1, 0x16, 0x4c, 0xc0, 0xfd, 0xc1, 0x0e, 0x29, 0xcf, 0xab, 0x7b,
	0x05, 0x76, 0x96, 0x10, 0xcb, 0xb7, 0xc2, 0x76, 0x64, 0x67, 0x09, 0x22, 0xb4, 0x54, 0xbe, 0x4f,
	0xcd, 0xaa, 0x7a, 0x91, 0x39, 0x07, 0x1f, 0xa0, 0xbd, 0xfa, 0x79, 0xc5, 0x3c, 0x7e, 0xb0, 0x01,
	0x7f, 0x53, 0xf9, 0x9f, 0x69, 0x91, 0xd3, 0x98, 0xcd, 0xca, 0xb7, 0xf1, 0x0f, 0x0c, 0xce, 0x67,
	0xc5, 0x61, 0x7d, 0xaa, 0x8b, 0xdf, 0xf3, 0x3e, 0xdf, 0xc2, 0x4a, 0x04, 0x0d, 0x9c, 0x02, 0x9c,
	0xa6, 0xc6, 0x4f, 0x75, 0x7f, 0xad, 0x8f, 0x77, 0x7d, 0x03, 0x41, 0x03, 0xbf, 0x83, 0x3b, 0x93,
	0x8c, 0x6a, 0x76, 0x88, 0xb9, 0xee, 0xbc, 0x19, 0xf0, 0x4f, 0x24, 0x2f, 0x08, 0x98, 0x81, 0x3b,
	0x67, 0x39, 0x3b, 0x05, 0xdc, 0x2c, 0xf2, 0xb6, 0x0e, 0x17, 0x77, 0x42, 0x17, 0x41, 0x63, 0xd3,
	0x31, 0x72, 0xf2, 0x14, 0x00, 0x00, 0xff, 0xff, 0x42, 0x74, 0x14, 0x47, 0x3f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MarketplaceCatalogClient is the client API for MarketplaceCatalog service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MarketplaceCatalogClient interface {
	// Product
	ListProducts(ctx context.Context, in *ListProductsReq, opts ...grpc.CallOption) (*ListProductsResp, error)
	GetProduct(ctx context.Context, in *GetProductReq, opts ...grpc.CallOption) (*Product, error)
	CreateProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Product, error)
	UpdateProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Product, error)
	DeleteProduct(ctx context.Context, in *GetProductReq, opts ...grpc.CallOption) (*Empty, error)
}

type marketplaceCatalogClient struct {
	cc grpc.ClientConnInterface
}

func NewMarketplaceCatalogClient(cc grpc.ClientConnInterface) MarketplaceCatalogClient {
	return &marketplaceCatalogClient{cc}
}

func (c *marketplaceCatalogClient) ListProducts(ctx context.Context, in *ListProductsReq, opts ...grpc.CallOption) (*ListProductsResp, error) {
	out := new(ListProductsResp)
	err := c.cc.Invoke(ctx, "/catalogproto.MarketplaceCatalog/ListProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceCatalogClient) GetProduct(ctx context.Context, in *GetProductReq, opts ...grpc.CallOption) (*Product, error) {
	out := new(Product)
	err := c.cc.Invoke(ctx, "/catalogproto.MarketplaceCatalog/GetProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceCatalogClient) CreateProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Product, error) {
	out := new(Product)
	err := c.cc.Invoke(ctx, "/catalogproto.MarketplaceCatalog/CreateProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceCatalogClient) UpdateProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Product, error) {
	out := new(Product)
	err := c.cc.Invoke(ctx, "/catalogproto.MarketplaceCatalog/UpdateProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceCatalogClient) DeleteProduct(ctx context.Context, in *GetProductReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/catalogproto.MarketplaceCatalog/DeleteProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MarketplaceCatalogServer is the server API for MarketplaceCatalog service.
type MarketplaceCatalogServer interface {
	// Product
	ListProducts(context.Context, *ListProductsReq) (*ListProductsResp, error)
	GetProduct(context.Context, *GetProductReq) (*Product, error)
	CreateProduct(context.Context, *Product) (*Product, error)
	UpdateProduct(context.Context, *Product) (*Product, error)
	DeleteProduct(context.Context, *GetProductReq) (*Empty, error)
}

// UnimplementedMarketplaceCatalogServer can be embedded to have forward compatible implementations.
type UnimplementedMarketplaceCatalogServer struct {
}

func (*UnimplementedMarketplaceCatalogServer) ListProducts(ctx context.Context, req *ListProductsReq) (*ListProductsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProducts not implemented")
}
func (*UnimplementedMarketplaceCatalogServer) GetProduct(ctx context.Context, req *GetProductReq) (*Product, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProduct not implemented")
}
func (*UnimplementedMarketplaceCatalogServer) CreateProduct(ctx context.Context, req *Product) (*Product, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProduct not implemented")
}
func (*UnimplementedMarketplaceCatalogServer) UpdateProduct(ctx context.Context, req *Product) (*Product, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProduct not implemented")
}
func (*UnimplementedMarketplaceCatalogServer) DeleteProduct(ctx context.Context, req *GetProductReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProduct not implemented")
}

func RegisterMarketplaceCatalogServer(s *grpc.Server, srv MarketplaceCatalogServer) {
	s.RegisterService(&_MarketplaceCatalog_serviceDesc, srv)
}

func _MarketplaceCatalog_ListProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProductsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceCatalogServer).ListProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/catalogproto.MarketplaceCatalog/ListProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceCatalogServer).ListProducts(ctx, req.(*ListProductsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceCatalog_GetProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceCatalogServer).GetProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/catalogproto.MarketplaceCatalog/GetProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceCatalogServer).GetProduct(ctx, req.(*GetProductReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceCatalog_CreateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceCatalogServer).CreateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/catalogproto.MarketplaceCatalog/CreateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceCatalogServer).CreateProduct(ctx, req.(*Product))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceCatalog_UpdateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceCatalogServer).UpdateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/catalogproto.MarketplaceCatalog/UpdateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceCatalogServer).UpdateProduct(ctx, req.(*Product))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceCatalog_DeleteProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceCatalogServer).DeleteProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/catalogproto.MarketplaceCatalog/DeleteProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceCatalogServer).DeleteProduct(ctx, req.(*GetProductReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _MarketplaceCatalog_serviceDesc = grpc.ServiceDesc{
	ServiceName: "catalogproto.MarketplaceCatalog",
	HandlerType: (*MarketplaceCatalogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListProducts",
			Handler:    _MarketplaceCatalog_ListProducts_Handler,
		},
		{
			MethodName: "GetProduct",
			Handler:    _MarketplaceCatalog_GetProduct_Handler,
		},
		{
			MethodName: "CreateProduct",
			Handler:    _MarketplaceCatalog_CreateProduct_Handler,
		},
		{
			MethodName: "UpdateProduct",
			Handler:    _MarketplaceCatalog_UpdateProduct_Handler,
		},
		{
			MethodName: "DeleteProduct",
			Handler:    _MarketplaceCatalog_DeleteProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "catalog.proto",
}
