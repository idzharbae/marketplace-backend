// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/idzharbae/marketplace-backend/svc/catalog/internal (interfaces: ReviewWriter)

// Package repomock is a generated GoMock package.
package repomock

import (
	gomock "github.com/golang/mock/gomock"
	entity "github.com/idzharbae/marketplace-backend/svc/catalog/internal/entity"
	reflect "reflect"
)

// MockReviewWriter is a mock of ReviewWriter interface.
type MockReviewWriter struct {
	ctrl     *gomock.Controller
	recorder *MockReviewWriterMockRecorder
}

// MockReviewWriterMockRecorder is the mock recorder for MockReviewWriter.
type MockReviewWriterMockRecorder struct {
	mock *MockReviewWriter
}

// NewMockReviewWriter creates a new mock instance.
func NewMockReviewWriter(ctrl *gomock.Controller) *MockReviewWriter {
	mock := &MockReviewWriter{ctrl: ctrl}
	mock.recorder = &MockReviewWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReviewWriter) EXPECT() *MockReviewWriterMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockReviewWriter) Create(arg0 entity.Review) (entity.Review, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(entity.Review)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockReviewWriterMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockReviewWriter)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockReviewWriter) Delete(arg0 entity.Review) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockReviewWriterMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockReviewWriter)(nil).Delete), arg0)
}

// Update mocks base method.
func (m *MockReviewWriter) Update(arg0 entity.Review) (entity.Review, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(entity.Review)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockReviewWriterMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockReviewWriter)(nil).Update), arg0)
}
