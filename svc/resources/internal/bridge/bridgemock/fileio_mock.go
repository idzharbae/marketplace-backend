// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/idzharbae/marketplace-backend/svc/resources/internal (interfaces: FileIO)

// Package bridgemock is a generated GoMock package.
package bridgemock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFileIO is a mock of FileIO interface.
type MockFileIO struct {
	ctrl     *gomock.Controller
	recorder *MockFileIOMockRecorder
}

// MockFileIOMockRecorder is the mock recorder for MockFileIO.
type MockFileIOMockRecorder struct {
	mock *MockFileIO
}

// NewMockFileIO creates a new mock instance.
func NewMockFileIO(ctrl *gomock.Controller) *MockFileIO {
	mock := &MockFileIO{ctrl: ctrl}
	mock.recorder = &MockFileIOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileIO) EXPECT() *MockFileIOMockRecorder {
	return m.recorder
}

// CreateFile mocks base method.
func (m *MockFileIO) CreateFile(arg0 string, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFile", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFile indicates an expected call of CreateFile.
func (mr *MockFileIOMockRecorder) CreateFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFile", reflect.TypeOf((*MockFileIO)(nil).CreateFile), arg0, arg1)
}

// DeleteFile mocks base method.
func (m *MockFileIO) DeleteFile(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFile", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFile indicates an expected call of DeleteFile.
func (mr *MockFileIOMockRecorder) DeleteFile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFile", reflect.TypeOf((*MockFileIO)(nil).DeleteFile), arg0)
}
